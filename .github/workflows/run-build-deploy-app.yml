name: Build & Push Docker Image after modifying the api

on:
    push:
      paths:
        - 'app/**'  # Exécuter le workflow uniquement si le code du conteneur est modifié
  
env:
  DOCKER_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
  APP_NAME : segmentation_api
  DOCKER_IMAGE_PATH: hedredo/segmentation_api:latest
  
# Définition des jobs du workflow à exécuter
jobs:
  build-push:
    runs-on: ubuntu-latest # Same as the container image
  
    steps:
      # Étape 1 : Cloner le dépôt
      - name: Checkout repository
        uses: actions/checkout@v3
  
      # Étape 2 : Installer Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10.16'
  
      # Étape 3 : Installer les dépendances du conteneur à tester
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r ./${{ env.APP_NAME }}/requirements.txt
        
      # Étape 6 : Build the Docker image
      - name: Build Docker image
        run: |
          docker build -t ${{ env.DOCKER_IMAGE_PATH }} ./${{ env.APP_NAME }}
  
      # Étape 7 : Push the Docker image
      - name: Push Docker image
        run: |
          echo ${{ env.DOCKER_PASSWORD }} | docker login -u ${{ env.DOCKER_USERNAME }} --password-stdin
          docker push ${{ env.DOCKER_IMAGE_PATH }}